name: Deploy to Azure
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  push_to_registery:
    name: Push Docker image
    runs-on: ubuntu-latest
    environment: Azure
    if: false
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: michalmoudry/user-service

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./src
          push: true
          tags: michalmoudry/user-service:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    #needs: [push_to_registery]
    #environment: Azure
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update subscription in app's config file
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "[subscription_id]"
          replace: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          regex: false
          include: "**app_config.yml"

      - name: Add Firebase config to app's general configurion
        run: |
          echo "[firebase.config]" >> ./src/config.toml
          echo "type = ${{ secrets.FB_TYPE }}" >> ./src/config.toml
          echo "private_key_id = ${{ secrets.FB_PRIV_KEY_ID }}" >> ./src/config.toml
          echo "private_key = ${{ secrets.FB_PRIV_KEY }}" >> ./src/config.toml
          echo "client_email = ${{ secrets.FB_CLIENT_EMAIL }}" >> ./src/config.toml

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: docker.io/michalmoudry/user-service:latest
          resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
          containerAppEnvironment: microservice-ref-framework-env
          containerAppName: user-service
          targetPort: 8085
          ingress: external
          yamlConfigPath: ./.azure/app_config.yml

      - name: Enable dapr for a Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp dapr enable \
              -n user-service \
              -g ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --dapr-app-id userservice \
              --dapr-app-protocol http \
              --dapr-app-port 8085
